name: Tatum.CSharp Nuget Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

env:
  DOWNSTREAM_DISPATCH_ADDRESS: https://api.github.com/repos/tatumio/tatum-csharp/actions/workflows/postRelease.yml/dispatches

jobs:

  Verify_Origin:
    name: Verify commit exists in master
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Verify commit exists in origin/main
        run: |
          git fetch --no-tags --prune --depth=1 origin +refs/heads/*:refs/remotes/origin/*
          git branch --remote --contains | grep origin/main
          
  Release_Version:
    name: Get Version from Tag
    steps:
      - name: Set VERSION variable from tag
        run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
  
  EVM_Release:
    name: EVM - Release Local
    uses: ./.github/workflows/releaseNugetPackage.yml
    with:
      name: Evm.Local
      version: ${VERSION}
      dependsOn: Core
    secrets: inherit
    needs: Release_Version
  
  ETH_Release:
    name: ETH - Release
    uses: ./.github/workflows/releaseNugetPackage.yml
    with:
      name: Ethereum
      version: ${VERSION}
      dependsOn: Evm.Local
    secrets: inherit
    needs: [Release_Version, EVM_Release]
    
  BTC_Local_Release:
    name: BTC - Release Local
    uses: ./.github/workflows/releaseNugetPackage.yml
    with:
      name: Bitcoin.Local
      version: ${VERSION}
      dependsOn: Core
    secrets: inherit
    needs: Release_Version
  
  BTC_Release:
    name: BTC - Release
    uses: ./.github/workflows/releaseNugetPackage.yml
    with:
      name: Bitcoin
      version: ${VERSION}
      dependsOn: Bitcoin.Local
    secrets: inherit
    needs: [Release_Version, BTC_Local_Release]
  
  Post_Release_Tests:
    steps:
      - name: Trigger Post Release Tests
        run: |
          curl -X POST \
          -H "Authorization: Bearer ${{secrets.DISPATCH_TOKEN}}" \
          -H "Accept: application/vnd.github.v3+json" \
          '${{ env.DOWNSTREAM_DISPATCH_ADDRESS }}' \
          -d '{"ref": "develop", "inputs": {"source": "New Tatum.CSharp version ${VERSION} released", "version": "${VERSION}"}}'