name: Tatum.CSharp Nuget Release - Chains
run-name: ${{ inputs.version }} - Tatum.CSharp Nuget release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Package Version'
        required: true
        type: string

env:
  DOWNSTREAM_DISPATCH_ADDRESS: https://api.github.com/repos/tatumio/tatum-csharp/actions/workflows/postRelease.yml/dispatches
  DOWNSTREAM_DISPATCH_ADDRESS_UNITY: https://api.github.com/repos/tatumio/tatum-csharp/actions/workflows/packUnity.yml/dispatches
  DOWNSTREAM_DISPATCH_ADDRESS_SLACK: https://api.github.com/repos/tatumio/tatum-csharp/actions/workflows/slackNotification.yml/dispatches

jobs:
  Release_L2_Packages:
    strategy:
      matrix:
        package: [
          Ethereum,
          Polygon,
          Nft,
          FungibleTokens,
          MultiTokens,
          BlockchainFees,
          Bsc,
          Harmony,
          Bitcoin,
          Solana
        ]
    name: ${{ matrix.package }} - Release
    uses: ./.github/workflows/releaseSingleChain.yml
    with:
      package: ${{ matrix.package }}
      version: ${{ inputs.version }}
    secrets: inherit
  
  Slack_Notification:
    name: Post to a Slack channel
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Slack Notification
        run: |
          curl -X POST \
          -H "Authorization: Bearer ${{secrets.DISPATCH_TOKEN}}" \
          -H "Accept: application/vnd.github.v3+json" \
          '${{ env.DOWNSTREAM_DISPATCH_ADDRESS_SLACK }}' \
          -d '{"ref": "master", "inputs": {"version": "${{ inputs.version }}"}}'
    needs: Release_L2_Packages
  
  Post_Release_Tests:
    name: Dispatch Post Release Tests
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Post Release Tests
        run: |
          curl -X POST \
          -H "Authorization: Bearer ${{secrets.DISPATCH_TOKEN}}" \
          -H "Accept: application/vnd.github.v3+json" \
          '${{ env.DOWNSTREAM_DISPATCH_ADDRESS }}' \
          -d '{"ref": "master", "inputs": {"version": "${{ inputs.version }}"}}'
    needs: Release_L2_Packages
  
  Prepare_Unity_Package:
    name: Dispatch Unity Package preparation
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Unity Package preparation
        run: |
          curl -X POST \
          -H "Authorization: Bearer ${{secrets.DISPATCH_TOKEN}}" \
          -H "Accept: application/vnd.github.v3+json" \
          '${{ env.DOWNSTREAM_DISPATCH_ADDRESS_UNITY }}' \
          -d '{"ref": "master", "inputs": {"version": "${{ inputs.version }}"}}'
    needs: Release_L2_Packages