name: Release Nuget Package

on:
  workflow_call:
    inputs:
      package:
        required: true
        type: string
      version:
        required: true
        type: string
      dependsOn:
        required: false
        type: string

env:
  PROJECT_PATH: ./${{ inputs.package }}/Tatum.CSharp.${{ inputs.package }}/Tatum.CSharp.${{ inputs.package }}.csproj
  PACKAGE_SOURCE: https://api.nuget.org/v3/index.json
  
jobs:

  preparePackage:
    name: ${{ inputs.package }} - Build and Publish
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Add version number to 'Tatum_CSharp_SDK' string in Configuration.cs
        run: |
          sed -i "s,Tatum_SDK_CSharp,Tatum_SDK_CSharp_${{ inputs.package }}/${{ inputs.version }},g" ./${{ inputs.package }}/Tatum.CSharp.${{ inputs.package }}.Core/Client/Configuration.cs
          grep -i "Tatum_SDK_CSharp" ./${{ inputs.package }}/Tatum.CSharp.${{ inputs.package }}.Core/Client/Configuration.cs   
      - name: Propagate PackageReleaseNotes from the Core package .csproj
        run: |
          sed -i "s/<PackageReleaseNotes>.*<\/PackageReleaseNotes>/<PackageReleaseNotes>$(grep -oPm1 "(?<=<PackageReleaseNotes>)[^<]+" ./${{ inputs.package }}/Tatum.CSharp/${{ inputs.package }}.Core/Tatum.CSharp.${{ inputs.package }}.Core.csproj)<\/PackageReleaseNotes>/g" ${{ env.PROJECT_PATH }}
      - name: ${{ inputs.package }} - Restore dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }}
      - name: ${{ inputs.package }} - Build
        run: dotnet build ${{ env.PROJECT_PATH }} --no-restore --configuration Release
      - name: ${{ inputs.package }} - Pack
        run: dotnet pack ${{ env.PROJECT_PATH }} --no-build --no-restore --configuration Release /p:Version=${{ inputs.version }} --output .
      - name: ${{ inputs.package }} - Push to Nuget
        run: dotnet nuget push "./${{ inputs.package }}/Tatum.CSharp.${{ inputs.package }}.${{ inputs.version }}.nupkg" --skip-duplicate --api-key ${{ secrets.NUGET_PUBLISH_KEY }} --source ${{ env.PACKAGE_SOURCE }}