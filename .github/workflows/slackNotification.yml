name: SlackNotification
run-name: ${{ inputs.version }} - slack notification

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Package Version'
        required: true
        type: string

jobs:
  Slack_Notification:
    name: Post to a Slack channel
    if: ${{ !contains(inputs.version, 'rc') }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Replace 'v$version' in payload-slack-content.json with ${{ inputs.version }}
        run: |
            sed -i "s/v\$version/${{ inputs.version }}/g" payload-slack-content.json
      - name: Replace '$releaseNotes' in payload-slack-content.json with Ethereum.Core package .csproj
        run: |
            sed -i "s/\$releaseNotes/$(grep -oPm1 "(?<=<PackageReleaseNotes>)[^<]+" ./Ethereum/Tatum.CSharp.Ethereum.Core/Tatum.CSharp.Ethereum.Core.csproj)/g" payload-slack-content.json
      - name: From all .csproj files get PackageId and output it as json array string in a single line (don't include files ending in .Test or .Core)
        id: getCurrentPackageIdList
        run: |
          echo "::set-output name=currentPackageIdList::$(grep -oPm1 "(?<=<PackageId>)[^<]+" ./*/*/*.csproj | grep -v -E 'Test|Core' | cut -d: -f2 | jq -R . | jq -s . | tr -d '\n')"
      - name: Get PackageId list from the github gist and output it
        id: comparePackages
        uses: actions/github-script@v6
        with:
          script: |
              const gist = await github.rest.gists.get({
                  gist_id: '7c96c30e8017c8dfb57b88e323f8114b'
              })
              console.log(gist.data.files['csharp-sdk-package-list.json'].content)
              const gistContent = JSON.parse(gist.data.files['csharp-sdk-package-list.json'].content)

              const currentPackageIdList = JSON.parse('${{ steps.getCurrentPackageIdList.outputs.currentPackageIdList }}')
              const previousPackageIdList = gistContent
              const newPackageIdList = currentPackageIdList.filter(x => !previousPackageIdList.includes(x))
              const newPackageIdListWithNew = newPackageIdList.map(x => "`new` " + x)
            
              console.log(newPackageIdListWithNew)

              const packageIdList = previousPackageIdList.concat(newPackageIdListWithNew)
              console.log('::set-output name=currentPackages::' + previousPackageIdList.concat(newPackageIdList).map(x => '"' + x + '"').join(','))
              console.log('::set-output name=packages::' + packageIdList.join('\\n'))
          github-token: ${{ secrets.GIST_SECRET }}
      - name: Replace '$packages' in payload-slack-content.json with PackageId list
        run: |
              sed -i "s/\$packages/${{ steps.comparePackages.outputs.packages }}/g" payload-slack-content.json
      - name: Update gist with new getCurrentPackageIdList as json array
        uses: actions/github-script@v6
        with:
          script: |
              const gist = await github.rest.gists.update({
                  gist_id: '7c96c30e8017c8dfb57b88e323f8114b',
                  files: {
                      'csharp-sdk-package-list.json': {
                          content: '[${{ steps.comparePackages.outputs.currentPackages }}]'
                      }
                  }
              })
          github-token: ${{ secrets.GIST_SECRET }}
      - name: Read payload-slack-content.json contents and update gist with it
        uses: actions/github-script@v6
        with:
          script: |
              const fs = require('fs');
              const gist = await github.rest.gists.update({
                  gist_id: '7c96c30e8017c8dfb57b88e323f8114b',
                  files: {
                      'csharp-sdk-release-notes.json': {
                          content: fs.readFileSync('./payload-slack-content.txt', 'utf8')
                      }
                  }
              })
          github-token: ${{ secrets.GIST_SECRET }}

#      - name: Post to Slack
#        id: slack
#        uses: slackapi/slack-github-action@v1.23.0
#        with:
#          channel-id: C03VAV2D601
#          payload-file-path: "./payload-slack-content.json"
#        env:
#          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
