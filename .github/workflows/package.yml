name: build and publish package

on:
  workflow_call:
    inputs:
      error_messages_version:
        required: false
        type: string
        default: "master"
      release_public:
        type: boolean
        required: false
        default: false
      package_version:
        type: string
        required: true
      configuration:
        type: string
        required: false
        default: Release
    secrets:
      publish_api_key:
        required: true
      gh_token:
        required: false
      
env:
  PACKAGE_SOURCE: https://nuget.pkg.github.com/tatumio/index.json
  PUB_PACKAGE_SOURCE: https://api.nuget.org/v3/index.json
  PROJECT_PATH: ./Tatum.CSharp/Tatum.CSharp.csproj

jobs:
  package:
    name: Build and publish - ${{ inputs.package_version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Download SDK error messages
        uses: wei/curl@v1.1.1
        with:
          args: https://raw.githubusercontent.com/tatumio/tatum-sdk-error-mesages/${{ inputs.error_messages_version }}/error-messages.json --output Tatum.CSharp.Core/Resources/errorMessages.json
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Add package source
        if: ${{ ! inputs.release_public }}
        run: dotnet nuget add source --username tatumio --password ${{ secrets.gh_token }} --store-password-in-clear-text --name github "${{ env.PACKAGE_SOURCE }}"
      - name: Set package source
        id: set_source
        run: |
          if [ "${{ inputs.release_public }}" == "true" ]; then
            echo "pkg_src=${{ env.PUB_PACKAGE_SOURCE }}" >> $GITHUB_OUTPUT
            echo "pkg_src_short_name=nuget.org" >> $GITHUB_OUTPUT
          else
            echo "pkg_src=github" >> $GITHUB_OUTPUT
            echo "pkg_src_short_name=github" >> $GITHUB_OUTPUT
          fi
      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECT_PATH }}
      - name: Create package - ${{ inputs.package_version }}
        run: dotnet pack ${{ env.PROJECT_PATH }} --configuration ${{ inputs.configuration }} /p:Version=${{ inputs.package_version }} --output .
      - name: Push to ${{ steps.set_source.outputs.pkg_src_short_name }}
        run: dotnet nuget push "./Tatum.CSharp.${{ inputs.package_version }}.nupkg" --skip-duplicate --api-key ${{ secrets.publish_api_key }} --source ${{ steps.set_source.outputs.pkg_src }}